/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package defenseapplication;

import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JTextArea;

/**
 *
 * @author ha
 */
public class MainView extends javax.swing.JFrame {
    Control controller;
    /**
     * Creates new form MainView
     */
    public MainView() {
        controller=new Control();
        controller.addVehicle(new HelicopterView(this));
        controller.addVehicle(new TankView(this));
        
        setVisible(true);
        setTitle("main");
        
        initComponents();
    }
public JTextArea getTextArea(){
    return this.ChatTextArea;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        AreaClearCheckBox = new javax.swing.JCheckBox();
        MassegeToVehicleTextField = new javax.swing.JTextField();
        SendBtn = new javax.swing.JButton();
        SendPvtCheckBox = new javax.swing.JCheckBox();
        CollectInfoBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        PositionSlider = new javax.swing.JSlider();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ChatTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        VehicleList = new javax.swing.JList<>();
        SoldierCountLabel = new javax.swing.JLabel();
        AmmoCountLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        AreaClearCheckBox.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        AreaClearCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AreaClearCheckBox.setText("Area Clear");
        AreaClearCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaClearCheckBoxActionPerformed(evt);
            }
        });

        MassegeToVehicleTextField.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N

        SendBtn.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        SendBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SendBtn.setText("Send");
        SendBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendBtnActionPerformed(evt);
            }
        });

        SendPvtCheckBox.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SendPvtCheckBox.setText("Send Private");
        SendPvtCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SendPvtCheckBoxActionPerformed(evt);
            }
        });

        CollectInfoBtn.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Green"));
        CollectInfoBtn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        CollectInfoBtn.setText("Collect Information");
        CollectInfoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CollectInfoBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Soldier Count");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("Ammo Amount");

        PositionSlider.setMinorTickSpacing(10);
        PositionSlider.setPaintLabels(true);
        PositionSlider.setPaintTicks(true);
        PositionSlider.setValue(1);
        PositionSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                PositionSliderStateChanged(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("Position");

        ChatTextArea.setColumns(20);
        ChatTextArea.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        ChatTextArea.setRows(5);
        jScrollPane1.setViewportView(ChatTextArea);

        VehicleList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        VehicleList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Helicopter", "Tank", "Submarine", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        VehicleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                VehicleListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(VehicleList);

        SoldierCountLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        SoldierCountLabel.setText("0");

        AmmoCountLabel.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        AmmoCountLabel.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SendBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(MassegeToVehicleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel3)
                                        .addGap(18, 18, 18)
                                        .addComponent(AmmoCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(SoldierCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(SendPvtCheckBox)
                                        .addGap(37, 37, 37)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(CollectInfoBtn)
                                        .addGap(53, 53, 53)
                                        .addComponent(AreaClearCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(PositionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addGap(2, 2, 2)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(21, 21, 21))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CollectInfoBtn, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AreaClearCheckBox))
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PositionSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(SendPvtCheckBox)
                            .addComponent(SoldierCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AmmoCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addComponent(MassegeToVehicleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SendBtn)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AreaClearCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaClearCheckBoxActionPerformed
        controller.updateAreaCleared(AreaClearCheckBox.isSelected());    
    }//GEN-LAST:event_AreaClearCheckBoxActionPerformed

    private void SendBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendBtnActionPerformed
        // TODO add your handling code here:
        if(SendPvtCheckBox.isSelected()){
            controller.SendPrivateMsg(MassegeToVehicleTextField.getText());
        }else{
        controller.SendMsgToVehicles(MassegeToVehicleTextField.getText());
        }
        System.out.println(SendPvtCheckBox.isSelected());
        
    }//GEN-LAST:event_SendBtnActionPerformed

    private void PositionSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_PositionSliderStateChanged
        // TODO add your handling code here:
        if(controller.selectedvehicle.isPositioned()){
           controller.selectedvehicle.setStrengthLevel(PositionSlider.getValue());
            controller.selectedvehicle.enableBtns();
      }
     
          System.out.println(PositionSlider.getValue());
        
    }//GEN-LAST:event_PositionSliderStateChanged

    private void CollectInfoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CollectInfoBtnActionPerformed
        controller.setCounts();
    }//GEN-LAST:event_CollectInfoBtnActionPerformed

    private void VehicleListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_VehicleListValueChanged
        controller.SelectVehicle();
    }//GEN-LAST:event_VehicleListValueChanged

    private void SendPvtCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SendPvtCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SendPvtCheckBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AmmoCountLabel;
    private javax.swing.JCheckBox AreaClearCheckBox;
    private javax.swing.JTextArea ChatTextArea;
    private javax.swing.JButton CollectInfoBtn;
    private javax.swing.JTextField MassegeToVehicleTextField;
    private javax.swing.JSlider PositionSlider;
    private javax.swing.JButton SendBtn;
    private javax.swing.JCheckBox SendPvtCheckBox;
    private javax.swing.JLabel SoldierCountLabel;
    private javax.swing.JList<String> VehicleList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables


    //Control as a Regular Inner Class
    
    public class Control {
   private ArrayList<VehicleObservable> observableList=new ArrayList<>();
   VehicleObservable selectedvehicle;
   DefaultListModel<String> nameList = new DefaultListModel<>();  
    public void addVehicle(VehicleObservable vehicle){
        observableList.add(vehicle);
    }
    public void updateAreaCleared(boolean isSelected){
        for (VehicleObservable vehicleObservable : observableList) {
            vehicleObservable.updateAreaClear(isSelected);
        }
    }
    public void SendMsgToVehicles(String msg){
        for (VehicleObservable vehicleObservable : observableList) {
            vehicleObservable.RecieveMassegetoVehicle(msg);
        }
    }
    public void SelectVehicle(){
        for (VehicleObservable vehicleObservable : observableList) {
            if(VehicleList.getSelectedValue()==vehicleObservable.returnName()){
                selectedvehicle=vehicleObservable;
            }
        }
       
    }
    public void SendPrivateMsg(String msg){
        for (VehicleObservable vehicleObservable : observableList) {
            if(vehicleObservable.returnName()==controller.selectedvehicle.returnName()){
            vehicleObservable.RecievePrivateMsg(msg);
            }
        }
    }
    public void setCounts(){
        AmmoCountLabel.setText(selectedvehicle.SendAmmoCount()+"");
        SoldierCountLabel.setText(selectedvehicle.SendSoldierCount()+"");
    }
}



}
